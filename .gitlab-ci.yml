image: docker:24.0

stages:
    - build
    - test
    - renovate

build-angular:
    stage: build
    image: node:20.3
    script:
        - npm ci --cache .npm --prefer-offline
        - npm run build
    artifacts:
        paths:
            - dist/
    cache:
        key: npm
        paths:
            - .npm/

test-cypress:
    stage: test
    image: cypress/included:12.13.0
    script:
        - npm ci --cache .npm --prefer-offline
        - npx start-server-and-test 'ng serve' http-get://localhost:4200/ 'npx cypress run'
    cache:
        key: npm
        paths:
            - .npm/

test-flask:
    stage: test
    image: registry.green-rabbit.net:5000/kimata/local_playwright:latest
    script:
        - export GIT_SSL_NO_VERIFY=1
        - git clone https://gitlab.green-rabbit.net/kimata/hems_config.git
        - mv hems_config/rasp-water.yaml config.yaml
        - python3 ./flask/app/app.py 2>&1 | tee flask.log &
        - python3 -m pytest test/test_basic.py
    artifacts:
        paths:
            - flask.log
    dependencies:
        - build-angular

renovate:
    stage: renovate
    image:
        name: registry.green-rabbit.net:5000/kimata/local_renovate:35

        entrypoint: [""]
    script:
        - renovate --platform gitlab --token ${RENOVATE_TOKEN} --endpoint ${CI_SERVER_URL}/api/v4 ${CI_PROJECT_PATH}
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule"'
        - changes:
              - renovate.json
